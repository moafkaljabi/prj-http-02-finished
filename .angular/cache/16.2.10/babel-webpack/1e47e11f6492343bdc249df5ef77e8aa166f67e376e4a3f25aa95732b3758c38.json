{"ast":null,"code":"import { HttpClient } from \"@angular/common/http\";\nimport { throwError } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AuthServices = /*#__PURE__*/(() => {\n  class AuthServices {\n    constructor(http) {\n      this.http = http;\n    }\n    signup(email, password) {\n      return this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyCILqxCAyaKWmaNI9icpNMTXTZiCMGLFSw', {\n        email: email,\n        password: password,\n        returnSecureToken: true\n      }).pipe(catchError(errorRes => {\n        let errorMessage = \"An unknown error occured!\";\n        if (!errorRes.error || !errorRes.error.error) {\n          return throwError(errorMessage);\n        }\n        switch (errorRes.error.error.message) {\n          case 'EMAIL_EXISTS':\n            errorMessage = 'This email already exists';\n        }\n        return throwError(errorMessage);\n      }));\n    }\n    Login(email, password) {\n      this.http.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyCILqxCAyaKWmaNI9icpNMTXTZiCMGLFSw', {\n        email: email,\n        password: password,\n        returnSecureToken: true\n      });\n    }\n    static #_ = this.ɵfac = function AuthServices_Factory(t) {\n      return new (t || AuthServices)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthServices,\n      factory: AuthServices.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthServices;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}