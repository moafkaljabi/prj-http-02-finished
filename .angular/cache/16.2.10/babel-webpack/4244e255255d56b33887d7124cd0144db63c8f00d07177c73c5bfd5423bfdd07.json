{"ast":null,"code":"import { AuthServices } from \"./auth.services\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.services\";\nimport * as i2 from \"@angular/forms\";\nexport let AuthComponent = /*#__PURE__*/(() => {\n  class AuthComponent {\n    constructor(authService) {\n      this.authService = authService;\n      this.isLoginMode = true;\n      this.isLoading = false;\n    }\n    onSwitchMode() {\n      this.isLoginMode = !this.isLoginMode;\n    }\n    onSubmit(form) {\n      if (!form.valid) {\n        return;\n      }\n      const email = form.value.email;\n      const password = form.value.password;\n      this.isLoading = true;\n      if (this.isLoginMode) {} else {\n        this.authService.signup(email, password).subscribe(resData => {\n          console.log(resData);\n          this.isLoading = false;\n        }, error => {\n          console.log(error);\n          this.isLoading = false;\n        });\n      }\n      form.reset();\n    }\n    static #_ = this.ɵfac = function AuthComponent_Factory(t) {\n      return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.AuthServices));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthComponent,\n      selectors: [[\"app-auth\"]],\n      decls: 18,\n      vars: 3,\n      consts: [[1, \"row\"], [1, \"col-xs-12\", \"col-md-6\", \"col-md-offset-3\"], [3, \"ngSubmit\"], [\"authForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"ngModel\", \"\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"ngModel\", \"\", \"name\", \"password\", \"required\", \"\", \"minlength\", \"6\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n      template: function AuthComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2, 3);\n          i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_2_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const _r0 = i0.ɵɵreference(3);\n            return i0.ɵɵresetView(ctx.onSubmit(_r0));\n          });\n          i0.ɵɵelementStart(4, \"div\", 4)(5, \"label\", 5);\n          i0.ɵɵtext(6, \"E-Mail\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 4)(9, \"label\", 7);\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\")(13, \"button\", 9);\n          i0.ɵɵtext(14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(15, \" | \");\n          i0.ɵɵelementStart(16, \"button\", 10);\n          i0.ɵɵlistener(\"click\", function AuthComponent_Template_button_click_16_listener() {\n            return ctx.onSwitchMode();\n          });\n          i0.ɵɵtext(17);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          const _r0 = i0.ɵɵreference(3);\n          i0.ɵɵadvance(13);\n          i0.ɵɵproperty(\"disabled\", !_r0.valid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate(ctx.isLoginMode ? \"Login\" : \"Signup\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\"Switch to \", ctx.isLoginMode ? \"Signup\" : \"Login\", \"\");\n        }\n      },\n      dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.MinLengthValidator, i2.NgModel, i2.NgForm],\n      encapsulation: 2\n    });\n  }\n  return AuthComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}